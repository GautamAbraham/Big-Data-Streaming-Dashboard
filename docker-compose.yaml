services:

  frontend:
    build:
      context: ./front_end
      dockerfile: Dockerfile
      args:
        VITE_MAPBOX_TOKEN: ${VITE_MAPBOX_TOKEN}
        VITE_API_URL:      ${VITE_API_URL}
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=${VITE_API_URL}

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: zrdRC-2GRYG5kygU-gcIEw
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  data-provider:
    build:
      context: ./data_provider
      dockerfile: Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_FILE: /app/config.ini
    volumes:
      - ./data_provider:/app
      - ./data_provider/safecast_data:/app/safecast_data
    depends_on:
      kafka:
        condition: service_healthy

  flink-jobmanager:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    command: jobmanager
    depends_on:
      kafka:
        condition: service_healthy

  flink-taskmanager:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    container_name: flink-taskmanager
    depends_on:
      flink-jobmanager:
        condition: service_started
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    command: taskmanager

  flink-processor:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      flink-jobmanager:
        condition: service_started
    volumes:
      - ./flink_process:/opt/flink/usrlib

volumes:
  kafka_data: