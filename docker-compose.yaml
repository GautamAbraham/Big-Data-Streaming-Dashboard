services:

  frontend:
    build:
      context: ./front_end
      dockerfile: Dockerfile
      args:
        VITE_MAPBOX_TOKEN: ${VITE_MAPBOX_TOKEN}
        VITE_API_URL: ${VITE_API_URL}
        VITE_WS_URL: ${VITE_WS_URL}
    ports:
      - "3000:80"
    env_file:
      - ./front_end/.env
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_METADATA_LOG_DIR: /var/lib/kafka/data
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 4  # Matches total TaskManager slots for optimal parallelism
      KAFKA_LOG_RETENTION_HOURS: 24  # Retain logs for 24 hours
      KAFKA_LOG_SEGMENT_BYTES: 1073741824  # 1GB log segments
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 10000  # Flush every 10k messages
      KAFKA_LOG_FLUSH_INTERVAL_MS: 1000  # Or every second
      CLUSTER_ID: zrdRC-2GRYG5kygU-gcIEw
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M
        reservations:
          cpus: '0.3'
          memory: 512M

  data-provider:
    build:
      context: ./data_provider
      dockerfile: Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_FILE: /app/config.ini
    volumes:
      - ./data_provider:/app
      - ./data_provider/safecast_data:/app/safecast_data
    depends_on:
      kafka:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  flink-jobmanager:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - "8081:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - JOB_MANAGER_MEMORY_PROCESS_SIZE=1536m
      - JOB_MANAGER_MEMORY_JVM_HEAP_SIZE=1024m
      - JOB_MANAGER_MEMORY_JVM_METASPACE_SIZE=256m
    command: jobmanager
    depends_on:
      kafka:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 1024M

  flink-taskmanager-1:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    container_name: flink-taskmanager-1
    depends_on:
      flink-jobmanager:
        condition: service_started
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
      - TASK_MANAGER_MEMORY_PROCESS_SIZE=1536m
      - TASK_MANAGER_MEMORY_FRAMEWORK_HEAP_SIZE=128m
      - TASK_MANAGER_MEMORY_TASK_HEAP_SIZE=1024m
      - TASK_MANAGER_MEMORY_MANAGED_SIZE=256m
    command: taskmanager
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1536M
        reservations:
          cpus: '1.5'
          memory: 1024M

  flink-taskmanager-2:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    container_name: flink-taskmanager-2
    depends_on:
      flink-jobmanager:
        condition: service_started
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=2
      - TASK_MANAGER_MEMORY_PROCESS_SIZE=1536m
      - TASK_MANAGER_MEMORY_FRAMEWORK_HEAP_SIZE=128m
      - TASK_MANAGER_MEMORY_TASK_HEAP_SIZE=1024m
      - TASK_MANAGER_MEMORY_MANAGED_SIZE=256m
    command: taskmanager
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1536M
        reservations:
          cpus: '1.5'
          memory: 1024M

  flink-processor:
    build:
      context: ./flink_process
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      flink-jobmanager:
        condition: service_started
    volumes:
      - ./flink_process:/opt/flink/usrlib

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      flink-jobmanager:
        condition: service_started
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
volumes:
  kafka_data: